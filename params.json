{"name":"Meteor-ensure","tagline":"Meteor package to monitor index and ensure that they are created in a semi-sane manner.","body":"# meteor-ensure\r\nMeteor package to monitor index and ensure that they are created in a semi-sane manner.\r\n\r\n## Installation\r\n\r\n### Use the package\r\n\r\n1. Clone github\r\n1. link to your meteor app package directory\r\n1. run meteor install below.\r\n\r\n### Meteor\r\n\r\n```sh\r\nmeteor add bulldogDevLabs:meteor-ensure\r\n```\r\n\r\n## Description\r\n\r\nIf your like me you put off creating your indexes because you knew you had to but didn't get around to doing it.\r\nThen you realize you have all of these publications that need to be examined to determeine the indexes that \r\nwould be of most help.\r\n\r\nMeteor-Ensure can help by capturing the find requests and performing appropriate mongo index operations to \r\ndymanically improve performance. Behind the scenes meteor-ensure records the index history and can also eaisly \r\nrebuild your indexing scheme. \r\n\r\nMeteor-Ensure will continually monitor the find requests to collections in your database. At startup, \r\na hook is installed on the find operations. Meteor-ensure suggests indexes based on these selectors. \r\nA mongodb collection named MeteorEnsure is used to store the suggested indexes that it finds. \r\n\r\nYou can ignore a suggestion by MeteorEnsure.update() {$set: {ignore:true}}. \r\n\r\nRemoving the suggestedIndex will also remove the index from the mongodb. \r\n\r\nUse the config object to change how automatic you want it to run.\r\n\r\n## Server\r\n\r\nDefault behavior\r\n\r\n```sh\r\nMeteorEnsure.config.installHooks = true;              // scan collections and add monitoring hooks\r\nMeteorEnsure.config.ensureAtStartup = true;          // at startup ensure all indexes are created.\r\nMeteorEnsure.config.autoSuggest = true;             // create suggestions when new indexes are found.\r\nMeteorEnsure.config.autoIndex = true;              // create indexes for new selections.\r\nMeteorEnsure.config.adminRoute = '/meteor-ensure' // route to ensure admin ui\r\n```\r\n\r\n## Admin\r\n\r\nOpen '/meteor-ensure' in your Meteor app. This interface allows you to inspect the status of meteor-ensure as well as\r\nchange options for the suggested indexes.\r\n\r\n## Kudos\r\n\r\n1. Meteor package allowing Mongo Collection instance lookup by collection name -  https://github.com/dburles/mongo-collection-instances\r\n2. Meteor Collection Hooks - https://github.com/matb33/meteor-collection-hooks\r\n3. Iron-Router - https://github.com/iron-meteor/iron-router\r\n4. Meteor - http://meteor.com\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}